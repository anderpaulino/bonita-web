.page_tasklistingadmin .filters_panel .primary_filters{
    a{
        color: @filtersPanel-textColor;
		font-weight: @filtersPanel-fontWeight;
		.fontSize(@filtersPanel-fontSize);
		.borderRadiusLeft(@filtersPanel-filtersCurrent-borderRadiusSize);
		display: block;
		padding: @filtersPanel-filters-paddingTop @filtersPanel-filters-paddingRight @filtersPanel-filters-paddingBottom @filtersPanel-filters-paddingLeft;
		min-height: @filtersPanel-filters-height - @filtersPanel-filters-paddingTop - @filtersPanel-filters-paddingBottom;
        &.performed{
            .bgFilter(@filtersPanel-filters-bgPerformed);
            &:hover{
                .bgHoverFilter(@filtersPanel-filters-bgPerformed);
            }
    	}
    }
    a.current{
        &.performed{
            .bgCurrentFilter(@filtersPanel-filters-bgPerformedSelected);
        }
    }
    .body a.current, .body a.current:hover{
		position: relative;
		background-color: @filtersPanel-filtersCurrent-background !important;
		color: @filtersPanel-filtersCurrent-link-textColor;
		&:after{
			position: absolute;
			content: "";
			display: block;
			width: @filtersPanel-filtersCurrent-width;
			.bg(@filtersPanel-filtersCurrent-bgArrow, no-repeat, @filtersPanel-filtersCurrent-background, center, right);
			top: 0;
			right: @filtersPanel-filtersCurrent-positionRight;
			margin-right: 0px;
			height: 100%;
			z-index: @zIndex-currentArrow;
		}
	}
}
.filters_panel{
	font-family: @filtersPanel-font;
	color: @filtersPanel-textColor;
	padding: @filtersPanel-padding;
	margin: @filtersPanel-margin;
	position: @filtersPanel-position;
	>.body{
		position: relative;
		>.actions{
			z-index: @zIndex-actionFilter;
			position: @filtersPanel-actions-position;
			top: @filtersPanel-actions-positionTop;
			left: @filtersPanel-actions-positionLeft;
			a{
				.addButton(@filtersPanel-actions-addButton-bgColor, @filtersPanel-actions-addButton-txtColor);
				max-width: @filtersPanel-width -(@filtersPanel-padding-left*2) -(@filtersPanel-actions-positionLeft*2) -(@button-paddingX*2);
			}
		}
	}
  .section .body {
    padding-left: 1*@w;
  }
	
	h1, h2, h3, h4, h5, h6, h7, label{
		color: @filtersPanel-titleColor;
		.boxSizing();
	}
	.resource_filters{
		a{
			
		}
		
	}
	.primary, .secondary, .resource{
		&_filters{
			a{
				color: @filtersPanel-textColor;
				font-weight: @filtersPanel-fontWeight;
				.fontSize(@filtersPanel-fontSize);
				.borderRadiusLeft(@filtersPanel-filtersCurrent-borderRadiusSize);
				display: block;
				padding: @filtersPanel-filters-paddingTop @filtersPanel-filters-paddingRight @filtersPanel-filters-paddingBottom @filtersPanel-filters-paddingLeft;
				min-height: @filtersPanel-filters-height - @filtersPanel-filters-paddingTop - @filtersPanel-filters-paddingBottom;
				position: relative;
                &.enabledprocesses{
                    .bgFilter(@filtersPanel-filters-bgAvailable);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgAvailable);
                    }
                }
				&.available{
					.bgFilter(@filtersPanel-filters-users-tasks-todo);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-users-tasks-todo);
                    }
				}
				&.unassigned{
					.bgSubFilter(@filtersPanel-filters-users-tasks-available);
                    &:hover{
                        .bgHoverSubFilter(@filtersPanel-filters-users-tasks-available);
                    }
				}
				&.disabledprocesses{
				    .bgFilter(@filtersPanel-filters-bgUnassigned);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgUnassigned);
                    }
				}
				&.resolvedprocesses{
					.bgSubFilter("filters-resolved.png");
                    &:hover{
                        .bgHoverSubFilter("filters-resolved.png");
                    }
				}
				&.unresolvedprocesses{
					.bgSubFilter("filters-unresolved.png");
                    &:hover{
                        .bgHoverSubFilter("filters-unresolved.png");
                    }
				}
				&.assigned{
					.bgSubFilter(@filtersPanel-filters-users-tasks-mytasks);
                    &:hover{
                        .bgHoverSubFilter(@filtersPanel-filters-users-tasks-mytasks);
                    }
				}
				&.ignored{
					.bgFilter(@filtersPanel-filters-users-tasks-hidden);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-users-tasks-hidden);
                    }
				}
				&.performed{
					.bgFilter(@filtersPanel-filters-users-tasks-performed);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-users-tasks-performed);
                    }
				}
				&.mycases{
					.bgFilter(@filtersPanel-filters-bgMyCases);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgMyCases);
                    }
				}
				&.workedoncases, &.openedcases{
					.bgFilter(@filtersPanel-filters-bgWorkedOn);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgWorkedOn);
                    }
				}
				&.archivedcases{
					.bgFilter(@filtersPanel-filters-bgArchived);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgArchived);
                    }
				}
				&.allusersfilter, &.allgroupsfilter, &.allrolesfilter, &.all{
					.bgFilter(@filtersPanel-filters-bgAll);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgAll);
                    }
				}
				&.humantask{
					.bgFilter(@filtersPanel-filters-bgHumanTask);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgHumanTask);
                    }
				}
				&.failed{
					.bgFilter(@filtersPanel-filters-bgFailed);
                    &:hover{
                        .bgHoverFilter(@filtersPanel-filters-bgFailed);
                    }
				}
				&.monitoring{
					.bgFilter("filters-monitoring.png");
                    &:hover{
                        .bgHoverFilter("filters-monitoring.png");
                    }
				}
				&.reports{
					.bgFilter("filters-reporting.png");
                    &:hover{
                        .bgHoverFilter("filters-reporting.png");
                    }
				}
				&.enabledusers{
                    .bgFilter("filters-user-active.png");
				&:hover{
                        .bgHoverFilter("filters-user-active.png");
                    }
                }
                &.disabledusers{
                    .bgFilter("filters-user-inactive.png");
                    &:hover{
                        .bgHoverFilter("filters-user-inactive.png");
                    }
                }
				&:hover{
					.verticalGradient(@header-menu-gradientColor1Hover, @header-menu-gradientPosition1, @header-menu-gradientColor2Hover, @header-menu-gradientPosition2);
				}
			}
			a.current{
                &.enabledprocesses{
                    .bgCurrentFilter(@filtersPanel-filters-bgAvailableSelected);
                }
				&.available{
					.bgCurrentFilter(@filtersPanel-filters-users-tasks-todo-selected);
				}
				&.disabledprocesses{
					.bgCurrentFilter(@filtersPanel-filters-bgUnassignedSelected);
				}
				&.resolvedprocesses{
					.bgCurrentSubFilter("filters-resolved-selected.png");
				}
				&.unresolvedprocesses{
					.bgCurrentSubFilter("filters-unresolved-selected.png");
				}
				&.assigned{
					.bgCurrentSubFilter(@filtersPanel-filters-users-tasks-mytasks-selected);
				}
				&.unassigned{
					.bgCurrentSubFilter(@filtersPanel-filters-users-tasks-available-selected);
				}
				&.ignored{
					.bgCurrentFilter(@filtersPanel-filters-users-tasks-hidden-selected);
				}
				&.performed{
					.bgCurrentFilter(@filtersPanel-filters-users-tasks-performed-selected);
				}
				&.mycases{
					.bgCurrentFilter(@filtersPanel-filters-bgMyCasesSelected);
				}
				&.workedoncases, &.openedcases{
					.bgCurrentFilter(@filtersPanel-filters-bgWorkedOnSelected);
				}
				&.archivedcases{
					.bgCurrentFilter(@filtersPanel-filters-bgArchivedSelected);
				}
				&.allusersfilter, &.allgroupsfilter, &.allrolesfilter, &.all{
					.bgCurrentFilter(@filtersPanel-filters-bgAllSelected);
				}
				&.humantask{
					.bgCurrentFilter(@filtersPanel-filters-bgHumanTaskSelected);
				}
				&.failed{
					.bgCurrentFilter(@filtersPanel-filters-bgFailedSelected);
				}
				&.monitoring{
					.bgFilter("filters-monitoring-selected.png");
				}
				&.reports{
					.bgFilter("filters-reporting-selected.png");
				}
				&.enabledusers{
                    .bgFilter("filters-user-active-selected.png");
                }
                &.disabledusers{
                    .bgFilter("filters-user-inactive-selected.png");
                }
				&:hover{
					background: @filtersPanel-filterHover-bgColor;
				}
			}
			.body{
				position: relative;
				a.current, .body a.current:hover{
				position: relative;
				background-color: @filtersPanel-filtersCurrent-background !important;
				color: @filtersPanel-filtersCurrent-link-textColor;
				&:after{
					position: absolute;
					content: "";
					display: block;
					width: @filtersPanel-filtersCurrent-width;
					.bg(@filtersPanel-filtersCurrent-bgArrow, no-repeat, @filtersPanel-filtersCurrent-background, center, right);
					top: 0;
					right: @filtersPanel-filtersCurrent-positionRight;
					margin-right: 0px;
					height: 100%;
					z-index: @zIndex-currentArrow;
				}
			
				}
			}
		}
	}
	.resource_filters{
		.header{
      background-color: darken(@mainAccentColor, 6%);
      border-bottom: 1px solid darken(@mainAccentColor, 9%);
      border-top: 1px solid darken(@mainAccentColor, 9%);
			margin-top: 3*@h;
			h1{
        display: block;
        font-size: 140%;
        font-style: italic;
        margin: 0;
        padding: 2*@h 1*@w 2*@h 4*@w;
			}
		}
		.body{
			position: relative;
			a{
				img{
					position: @filtersPanel-filters-filtersResource-linkImage-position;
					display: @filtersPanel-filters-filtersResource-linkImage-display;
					margin: @filtersPanel-filters-filtersResource-linkImage-margin;
					width: @filtersPanel-filters-filtersResource-linkImage-width;
					height: @filtersPanel-filters-filtersResource-linkImage-height;
					&.empty{
						.bg(@filtersPanel-filters-filtersResource-linkImage-bgImg);
					}
				}
			}
			a.current img.empty{
				.bg(@filtersPanel-filters-filtersResource-linkImageCurrent-bgImg);
			}
		}
	}
}